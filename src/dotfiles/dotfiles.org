# -- BEGIN_METADATA -----------------------------------------------------------
#+TITLE:        .files installation script
#+AUTHOR:       scheatkode
#+EMAIL:        scheatkode@gmail.com
#+DESCRIPTION:  .files installation script code and documentation
#+STARTUP:      noindent lognoteclock-out
#+OPTIONS:      html-postamble:nil toc:nil d:nil num:nil :results nil
#+BABEL:        :cache no
#+PROPERTY:     header-args :comments no :tangle yes :export code :padline yes
#+LATEX_HEADER: \usepackage{parskip}
#+LATEX_HEADER: \usepackage{inconsolata}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
# -- END_METADATA -------------------------------------------------------------

This  script backs  up the  current dotfiles,  if any,  and symlinks  the ones
provided to their respective locations.

* Header

  This  script   assumes  a   POSIX  shell  is   present  for   portability  and
  reproduceability. Any global shellcheck directives are put here as well.

  #+BEGIN_SRC sh :shebang #!/bin/sh
  # shellcheck shell=sh
  #+END_SRC

* Colors

  Colors are defined here for better readability of log output.

  #+BEGIN_SRC sh
    RED='\e[31m'
  GREEN='\e[32m'
 YELLOW='\e[33m'
   BLUE='\e[34m'
MAGENTA='\e[35m'
   CYAN='\e[36m'
 NORMAL='\e[0m'
  #+END_SRC

* Constants

  Script-wide  constants  are  defined  here.  In this  case,  only  a  constant
  containing either =$HOME= or =~= is needed.

  #+BEGIN_SRC sh
  home="${HOME:-'~'}"
  #+END_SRC

* Logging functions

  Logging facilities are defined hereafter for ease of use across the script.

  - info     :: Prints the given informational message /without/ a line feed.
  - infoline :: Prints the given informational message /with/ a line feed.
  - warn     :: Prints the given warning message /with/ a line feed.
  - fail     :: Prints the given error message and exits, setting the return value accordingly.
  - success  :: Use with the info function to modify the state to ~OK~.

  #+BEGIN_SRC sh
  info      () { echo -en    "${CYAN}[INFO]${NORMAL} " "${*} " ;          }
  infoline  () { echo -e     "${CYAN}[INFO]${NORMAL} " "${*} " ;          }
  warn      () { echo -e   "${YELLOW}[WARN]${NORMAL} " "${*} " ;          }
  fail      () { echo -e      "${RED}[FAIL]${NORMAL} " "${*} " ; exit 1 ; }
  success   () { echo -e  "\r${GREEN}[ OK ]${NORMAL}"          ;          }
  #+END_SRC
